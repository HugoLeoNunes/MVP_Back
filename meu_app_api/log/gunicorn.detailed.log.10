[2023-11-26 10:56:27,933] ERROR log_exception() L1449 Exception on /clientes [GET] - call_trace=C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py L1449
Traceback (most recent call last):
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask_cors\extension.py", line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask_openapi3\scaffold.py", line 109, in wrapper
    resp = _do_wrapper(
           ^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask_openapi3\do_wrapper.py", line 135, in _do_wrapper
    response = func(**request_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\OneDrive\Área de Trabalho\MVP\desenvolvimento-full-stack-basico\aula-3\meu_app_api\app.py", line 75, in get_clientes
    clientes = session.query(Cliente).all()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2159, in query
    return self._query_cls(entities, self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 180, in __init__
    self._set_entities(entities)
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 187, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 188, in <listcomp>
    coercions.expect(
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\coercions.py", line 181, in expect
    insp._post_inspect
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1184, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2182, in _post_inspect
    self._check_configure()
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 1924, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 3483, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 3518, in _do_configure_registries
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'mapped class Cliente->cliente'. Original exception was: When initializing mapper mapped class Cliente->cliente, expression 'Comentario' failed to locate a name ('Comentario'). If this is a class name, consider adding this relationship() to the <class 'model.cliente.Cliente'> class after both dependent classes have been defined.
[2023-11-26 10:56:28,005] INFO _log() L224  127.0.0.1 - - [26/Nov/2023 10:56:28] "[35m[1mGET /clientes HTTP/1.1[0m" 500 - - call_trace=C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\werkzeug\_internal.py L224 
[2023-11-26 10:56:43,740] INFO _log() L224  127.0.0.1 - - [26/Nov/2023 10:56:43] "[33mPOST /produto HTTP/1.1[0m" 404 - - call_trace=C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\werkzeug\_internal.py L224 
[2023-11-26 11:02:37,087] ERROR log_exception() L1449 Exception on /clientes [GET] - call_trace=C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py L1449
Traceback (most recent call last):
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 2073, in wsgi_app
    response = self.full_dispatch_request()
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 1519, in full_dispatch_request
    rv = self.handle_user_exception(e)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask_cors\extension.py", line 165, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
                                                ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 1517, in full_dispatch_request
    rv = self.dispatch_request()
         ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask\app.py", line 1503, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**req.view_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask_openapi3\scaffold.py", line 109, in wrapper
    resp = _do_wrapper(
           ^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\flask_openapi3\do_wrapper.py", line 135, in _do_wrapper
    response = func(**request_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\OneDrive\Área de Trabalho\MVP\desenvolvimento-full-stack-basico\aula-3\meu_app_api\app.py", line 75, in get_clientes
    clientes = session.query(Cliente).all()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\session.py", line 2159, in query
    return self._query_cls(entities, self, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 180, in __init__
    self._set_entities(entities)
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 187, in _set_entities
    self._raw_columns = [
                        ^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\query.py", line 188, in <listcomp>
    coercions.expect(
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\sql\coercions.py", line 181, in expect
    insp._post_inspect
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\util\langhelpers.py", line 1184, in __get__
    obj.__dict__[self.__name__] = result = self.fget(obj)
                                           ^^^^^^^^^^^^^^
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 2182, in _post_inspect
    self._check_configure()
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 1924, in _check_configure
    _configure_registries({self.registry}, cascade=True)
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 3483, in _configure_registries
    _do_configure_registries(registries, cascade)
  File "C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\sqlalchemy\orm\mapper.py", line 3518, in _do_configure_registries
    raise e
sqlalchemy.exc.InvalidRequestError: One or more mappers failed to initialize - can't proceed with initialization of other mappers. Triggering mapper: 'mapped class Cliente->cliente'. Original exception was: When initializing mapper mapped class Cliente->cliente, expression 'Comentario' failed to locate a name ('Comentario'). If this is a class name, consider adding this relationship() to the <class 'model.cliente.Cliente'> class after both dependent classes have been defined.
[2023-11-26 11:02:37,123] INFO _log() L224  127.0.0.1 - - [26/Nov/2023 11:02:37] "[35m[1mGET /clientes HTTP/1.1[0m" 500 - - call_trace=C:\Users\Hugo Nunes\AppData\Local\Programs\Python\Python311\Lib\site-packages\werkzeug\_internal.py L224 
